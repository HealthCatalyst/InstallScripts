#!/bin/sh
set -e

echo "Version 1.056"

#
# This script is meant for quick & easy install via:
#   curl -sSL https://healthcatalyst.github.io/InstallScripts/realtime/installrealtimeswarm.txt | sh -s

# Remember: no spaces allowed in variable set commands in bash
myhostname="$1"

if [ -z "$myhostname" ]; then
	echo "Please type in hostname to use for SSL certificate:"
	read -e myhostname < /dev/tty
fi

CertPassword="roboconf"
RabbitMqMgmtUiPassword="roboconf2"

echo "Using host:"$myhostname

docker service rm interfaceengine || echo "interfaceengine is not already present"
docker service rm rabbitmq || echo "rabbitmq is not already present"
docker service rm certdownloadserver || echo "certdownloadserver is not already present"

echo "sleeping to let containers be removed"
sleep 3s;

docker network rm realtimenet || echo "realtimenet is not already present"

echo "sleeping to let network be removed"
sleep 15s;

# create the volume to store certificates
docker volume create rabbitmqcertstore || echo 'volume rabbitmqcertstore already exists'

echo "existing services"
docker service ls

echo "creating realtimenet network"
docker network create \
	--driver overlay \
	--subnet=172.28.0.0/16 \
	--ip-range=172.28.5.0/24 \
realtimenet

echo "creating rabbitmq service"

# 5672 = Non SSL port (not exposed ourside of this swarm)
# 5671 = SSL port
# 15672 = SSL port for Management Web UI

docker service create --name rabbitmq \
	--env CERT_HOSTNAME=$myhostname \
	--env CERT_PASSWORD=$CertPassword \
	--env RABBITMQ_MGMT_UI_PASSWORD=$RabbitMqMgmtUiPassword \
  	--mount src=rabbitmqcertstore,dst=/opt/healthcatalyst/ \
	--replicas 1 \
	--constraint "node.role == manager" \
	--network realtimenet \
    -p 5671:5671 \
    -p 15672:15672 \
	--detach=false \
healthcatalyst/fabric.realtime.rabbitmq

echo "waiting for rabbitmq to come up"
sleep 15s;

# affinity documentation
# https://docs.docker.com/engine/reference/commandline/service_create/#options
# https://docs.docker.com/v1.10/swarm/scheduler/filter/

# use constraints to run the webserver on the same node as rabbitmq

# 8081 = HTTP port for downloading certificates

echo "starting mini webserver to allow access to certificate files"
docker service create --name certdownloadserver \
	-p 8081:3000 \
  	--mount src=rabbitmqcertstore,dst=/app/public,readonly=true \
	--constraint "node.role == manager" \
	--detach=false \
healthcatalyst/fabric.miniwebserver

# 8080 = HTTP port
# 8443 = HTTPS port
# 6661 = Port for receiving HL7 messages

echo "creating mirth service"
docker service create --name interfaceengine \
	--replicas 1 \
	--network realtimenet \
    -p 8080:8080 \
    -p 8443:8443 \
    -p 6661:6661 \
	--detach=false \
healthcatalyst/fabric.docker.interfaceengine

echo "waiting for interfaceengine to come up"
sleep 5s;

echo "you can download the client certificate from this url"
echo "http://$myhostname:8081/client/fabric_rabbitmq_client_cert.p12"

echo "if you want, you can download the CA (Certificate Authority) cert from this url"
echo "http://$myhostname:8081/client/fabric_rabbitmq_ca_cert.p12"
