kind: Deployment
apiVersion: extensions/v1beta1
metadata:
# name for this pod
  name: rabbitmq
# namespace for this pod
  namespace: fabricrealtime  
  labels:
    app: rabbitmq
spec:
  replicas: 1
  revisionHistoryLimit: 3  # Clean-up old Replica Sets deployed; only keep previous 3.
  strategy:
    # We need to kill the existing Pod before creating an new one
    # for the new one to be able to attach the persistent disk.
    type: Recreate        
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        # name of this pod
        - name: rabbitmq
          # image to pull
          image: healthcatalyst/fabric.realtime.rabbitmq:latest
          # specify to always pull a new image
          imagePullPolicy: Always
          # environment variables
          env:
            - name: CERT_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: certhostname
                  key: value
            - name: RABBITMQ_MGMT_UI_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmqmgmtuipassword
                  key: password
            - name: RABBITMQ_MNESIA_BASE
              value: "/opt/rabbitmq"
            - name: RABBITMQ_LOGS
              value: "-"
            # - name: DISABLE_SSL
            #   value: "true"
          ports:
            # expose port 3000
            - containerPort: 5671
              # name of the port
              name: rabbitmq
            - containerPort: 5672
              # name of the port
              name: rabbitmq2
            - containerPort: 15672
              # name of the port
              name: rabbitmqmgmt
          volumeMounts:
            - name: rabbitmqcert-persistent-storage
              # point the /var/lib/mysql folder inside the container to the volume called mysql-persistent-storage
              mountPath: /opt/healthcatalyst/
              subPath: certs              
            - name: rabbitmq-persistent-storage
              # point the /var/lib/mysql folder inside the container to the volume called mysql-persistent-storage
              mountPath: /opt/rabbitmq
              subPath: rabbitmq    
      volumes:
      - name: rabbitmqcert-persistent-storage
        persistentVolumeClaim:
          claimName: realtime.rabbitmqcert           
      - name: rabbitmq-persistent-storage
        persistentVolumeClaim:
          claimName: realtime.rabbitmq           
