apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-azurefile
  namespace: fabricnlp
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  azureFile:
    secretName: azure-secret
    secretNamespace: default
    shareName: k8stest
    readOnly: false
  mountOptions:
    - dir_mode=0731
    - file_mode=0724
    - uid=1000
    - gid=1000
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-azurefile
  namespace: fabricnlp
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: ""
---
kind: Pod
apiVersion: v1
metadata:
  name: nginx-azurefile
  namespace: fabricnlp
spec:
  containers:
  - image: nginx
    name: nginx-azurefile
    command:
    - "/bin/sh"
    - "-c"
    - while true; do echo $(date) >> /mnt/blobfile/outfile; sleep 1; done
    volumeMounts:
    - name: blobfile01
      mountPath: "/mnt/blobfile"
  volumes:
  - name: blobfile01
    persistentVolumeClaim:
      claimName: pvc-azurefile
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: azure-file-volume-mysql
  namespace: fabricnlp    
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteMany
  azureFile:
    secretName: azure-secret
    secretNamespace: default
    shareName: fabricnlp
    readOnly: false
  mountOptions:
  # we need to set owner of this to mysql user (999) so it has permissions to this folder
    - uid=999
    - gid=999
  # and set permissions for the user to this folder
  # 0 no permissions
  # 1 execute
  # 2 write
  # 3 write & execute
  # 4 read
  # 5 read & execute
  # 6 read & write
  # 7 read write & execute  
  # in 0731 0 is ignore, the 7 applies to owner, 3 applies to group, 1 applies to everyone else
    - dir_mode=0731
    - file_mode=0764
  claimRef:
    namespace: fabricnlp
    name: nlp.mysqlserver
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: azure-file-volume-solr
  namespace: fabricnlp    
spec:
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteMany
  azureFile:
    secretName: azure-secret
    secretNamespace: default
    shareName: fabricnlp
    readOnly: false
  mountOptions:
    - dir_mode=0731
    - file_mode=0724
    - uid=1000
    - gid=1000
  claimRef:
    namespace: fabricnlp
    name: nlp.solrserver
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nlp.mysqlserver
  namespace: fabricnlp  
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 128Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nlp.solrserver
  namespace: fabricnlp  
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 128Gi
---
# Solr pod
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: fabric.nlp.solrserver
  namespace: fabricnlp    
  labels:
    app: solrserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: solrserver
  template:
    metadata:
      labels:
        app: solrserver
    spec:
      containers:
        - name: solrserver
          image: healthcatalyst/fabric.nlp.docker.solr:latest
          #imagePullPolicy: Always          
          volumeMounts:
            - name: solr-persistent-storage
              mountPath: /var/lib/solr
              subPath: solr
          ports:
            - containerPort: 8085
              name: solr
      volumes:
      - name: solr-persistent-storage
        persistentVolumeClaim:
          claimName: nlp.solrserver            
---
# MySql pod
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
# name for this pod
  name: mysqlserver
# namespace for this pod
  namespace: fabricnlp  
  labels:
    app: mysqlserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysqlserver
  template:
    metadata:
      labels:
        app: mysqlserver
    spec:
      containers:
        # name of this container in the pod
        - name: mysqlserver
          # image to pull
          image: healthcatalyst/fabric.nlp.docker.mysql:latest
          # specify to always pull a new image
          #imagePullPolicy: Always
          # environment variables
          env:
            - name: MYSQL_ROOT_PASSWORD
              # set the value of this environment variable from a secret called mysqlrootpassword
              valueFrom:
                secretKeyRef:
                  name: mysqlrootpassword
                  key: password
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysqlpassword
                  key: password
            - name: MYSQL_DATABASE
              # set the value of this environment variable directly
              value: nlpmt
            - name: MYSQL_USER
              value: NLP_APP_USER
          ports:
            # expose port 3306
            - containerPort: 3306
              # name of the port
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage2
              # point the /var/lib/mysql folder inside the container to the volume called mysql-persistent-storage
              mountPath: /var/lib/mysql
              subPath: mysql              
            - name: mysql-persistent-storage
              # point the /var/lib/mysql folder inside the container to the volume called mysql-persistent-storage
              mountPath: /data/mysql2
      volumes:
      - name: mysql-persistent-storage
        hostPath:
          path: /data/mysql          
      - name: mysql-persistent-storage2
        persistentVolumeClaim:
          claimName: nlp.mysqlserver            
---
