#!/bin/sh
set -e
#
# This script is meant for quick & easy install via:
#   'curl -sSL https://imranq2.github.io/InstallScripts/installkibana.txt | sh -s <ip1 of elasticsarch>'
#   'curl -sSL https://imranq2.github.io/InstallScripts/installkibana.txt | sh -s 10.5.4.4'
# or:
#   'wget -qO- https://imranq2.github.io/InstallScripts/installkibana.txt | sh -s <ip1> <ip2> <ip3>'
#
#

defaultpassword="ILoveElasticSearch2017"

echo "Starting setup..."
u="$(whoami)"
echo "User name: $u"

if [ "$#" -lt 1 ]; then
  echo "Error: Must pass IP1 IP2(optional) IP3(optional)" >&2
  echo "Usage: curl -sSL https://imranq2.github.io/InstallScripts/installkibana.txt | sh -s <ip of elasticsearch>" >&2
  exit 1
fi

# no spaces allowed in variable set commands
ip1="$1"
ssl="$2"
paramsToES=""

echo "==== Parameters ======"
echo "node name: [$hostname]" 
echo "ip1: $ip1"
echo "ssl: $ssl"
echo "==== End Parameters ===="

if [ ! -z "$ssl" ]; then
  echo "Setting up SSL"
#  paramsToES="-e ELASTICSEARCH_URL=\"https://elasticsearch:9200\" -e SERVER_SSL_KEY=/usr/share/kibana/config/node.key -e SERVER_SSL_CERT=/usr/share/kibana/config/node.crt -e ELASTICSEARCH_SSL_KEY=/usr/share/kibana/config/node.key -e ELASTICSEARCH_SSL_VERIFY=false -e ELASTICSEARCH_SSL_CERT=/usr/share/kibana/config/node.crt -e ELASTICSEARCH_SSL_CA=/usr/share/kibana/config/ca.crt -e XPACK_SECURITY_ENCRYPTIONKEY=0123456789012345678901234567890123456789 -e ELASTICSEARCH_USERNAME=kibana -e ELASTICSEARCH_PASSWORD=$defaultpassword"
#  paramsToES="-e ELASTICSEARCH_URL=\"https://elasticsearch:9200\""

  #echo $paramsToES
fi

echo "==== Creating update script ===="

installfolder="/opt/install/"
installscriptfile="updatedocker"
installscript="$installfolder$installscriptfile"

mkdir -p $HOME/bin

if [[ ! -d "$installfolder" ]]; then
  sudo mkdir -p $installfolder

  sudo setfacl -m u:$u:rwx $installfolder
fi

echo "#!/bin/sh" > $installscript
echo "curl -sSL https://imranq2.github.io/InstallScripts/installkibana.txt | sh -s $@" >> $installscript
chmod +x $installscript

if [[ ! -e "$HOME/bin/$installscriptfile" ]]; then 
  echo "creating a symbolic link for install file"
  echo "ln -f -s $installscript $HOME/bin/$installscriptfile"
  ln -f -s $installscript $HOME/bin/$installscriptfile
fi

echo "==== Update script ===="
cat $installscript
echo "==== End Update Script ===="

echo "==== Downloading and installing ElasticSearch Docker container ===="

echo "====  existing containers on this host ===="
docker ps -a

echo "==== existing images on this host ===="
docker images

echo "==== existing volumes on this host ===="
docker volume ls

# check to see if volume already exists.  if not, create it
if [ -z $(docker volume ls -q --filter "name=esdata") ]; then
  echo "==== Creating persistent volume for ElasticSearch ===="
  docker volume create --name esdata
fi

echo "stopping existing docker container"
docker stop dockerkibana || echo 'no container to stop'
echo "removing docker container"
docker rm dockerkibana || echo 'no container to remove'
echo "removing docker image"
docker rmi imranq2/dockerkibana || echo 'no image to remove'
echo "pulling latest docker image from repo"
docker pull imranq2/dockerkibana
echo "starting docker container with new image."
set -x
docker create -p 5601:5601 --name dockerkibana --add-host elasticsearch:$ip1 -e SERVER_HOST=dev-es01.cafe.healthcatalyst.com $paramsToES imranq2/dockerkibana 
set +x

echo "sleeping for 5s so docker container is up"
sleep 5s

nodekeyfile="node.key"
nodekeypath="$installfolder$nodekeyfile"

if [ ! -z "$ssl" ]; then
  echo "Checking if [$nodekeypath] exists"
  if [[ -f "$nodekeypath" ]]; then
    echo "copying ssl keys from $installfolder"
    docker cp $installfolder/node.key dockerkibana:/usr/share/kibana/config
    docker cp $installfolder/node.crt dockerkibana:/usr/share/kibana/config
    docker cp $installfolder/ca.crt dockerkibana:/usr/share/kibana/config

#    docker exec dockerkibana /bin/cp -rf /usr/share/kibana/config/kibanassl.yml /usr/share/kibana/config/kibana.yml

    protocol="https"
  else
    echo "ERROR: No key files found in [$nodekeypath] so cannot set up SSL"
  fi

    docker start dockerkibana

#    docker exec dockerkibana gosu kibana /usr/share/kibana/bin/kibana-plugin install x-pack

#    docker restart dockerkibana
  fi

# https://www.elastic.co/guide/en/x-pack/current/kibana.html

echo "==== Listing running docker containers ===="
docker ps

echo "==== All Done ===="
echo "NOTE To update the docker image on this host in the future, just run"
echo "$installscriptfile"
