# define persistent volumes
# ----- MySql ----------
# Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: azure-file-volume-mysql
  namespace: fabricrealtime    
spec:
  storageClassName: default
  capacity:
    storage: 128Gi
  # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
  accessModes:
    - ReadWriteMany
  # https://kubernetes.io/docs/api-reference/v1.8/#azurefilepersistentvolumesource-v1-core
  azureFile:
    secretName: azure-secret
    secretNamespace: default
    shareName: fabricrealtime
    readOnly: false
  mountOptions:
  # we need to set owner of this to mysql user (999) so it has permissions to this folder
    - uid=999
    - gid=999
  # and set permissions for the user to this folder
  # 0 no permissions
  # 1 execute
  # 2 write
  # 3 write & execute
  # 4 read
  # 5 read & execute
  # 6 read & write
  # 7 read write & execute  
  # in 0731 0 is ignore, the 7 applies to owner, 3 applies to group, 1 applies to everyone else
    - dir_mode=0731
    - file_mode=0764
  claimRef:
    namespace: fabricrealtime
    name: az-files-mysql
---
# Persistent Volume Claim
# claims have to be defined here otherwise when we remove the pods the volume goes into Released mode
# and we can't bind to that volume again until we delete the volume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: az-files-mysql
  namespace: fabricrealtime  
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 128Gi
---
# ----- Certificate Server  ----------
# Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: azure-file-volume-certificateserver
  namespace: fabricrealtime    
spec:
  storageClassName: default
  capacity:
    storage: 16Gi
  # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
  accessModes:
    - ReadWriteMany
  # https://kubernetes.io/docs/api-reference/v1.8/#azurefilepersistentvolumesource-v1-core
  azureFile:
    secretName: azure-secret
    secretNamespace: default
    shareName: fabricrealtime
    readOnly: false
  claimRef:
    namespace: fabricrealtime
    name: az-files-certificateserver
---
# Persistent Volume Claim
# claims have to be defined here otherwise when we remove the pods the volume goes into Released mode
# and we can't bind to that volume again until we delete the volume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: az-files-certificateserver
  namespace: fabricrealtime  
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 16Gi
---
# ----- RabbitMq Cert  ----------
# Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: azure-file-volume-rabbitmqcert
  namespace: fabricrealtime    
spec:
  storageClassName: default
  capacity:
    storage: 16Gi
  # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
  accessModes:
    - ReadWriteMany
  # https://kubernetes.io/docs/api-reference/v1.8/#azurefilepersistentvolumesource-v1-core
  azureFile:
    secretName: azure-secret
    secretNamespace: default
    shareName: fabricrealtime
    readOnly: false
  claimRef:
    namespace: fabricrealtime
    name: az-files-rabbitmqcert
---
# Persistent Volume Claim
# claims have to be defined here otherwise when we remove the pods the volume goes into Released mode
# and we can't bind to that volume again until we delete the volume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: az-files-rabbitmqcert
  namespace: fabricrealtime  
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 16Gi
---
# ----- RabbitMq Storage  ----------
# Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: azure-file-volume-rabbitmq
  namespace: fabricrealtime    
spec:
  storageClassName: default
  capacity:
    storage: 128Gi
  # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
  accessModes:
    - ReadWriteMany
  # https://kubernetes.io/docs/api-reference/v1.8/#azurefilepersistentvolumesource-v1-core
  mountOptions:
  # we need to set owner of this to mysql user (999) so it has permissions to this folder
  # https://github.com/airdock-io/docker-base/wiki/Common-User-List
  # This should be 4204 according to documentation but is actually 999 in reality
    - uid=999
    - gid=999
  # and set permissions for the user to this folder
  # 0 no permissions
  # 1 execute
  # 2 write
  # 3 write & execute
  # 4 read
  # 5 read & execute
  # 6 read & write
  # 7 read write & execute  
  # in 0731 0 is ignore, the 7 applies to owner, 3 applies to group, 1 applies to everyone else
    - dir_mode=0731
    - file_mode=0764
  azureFile:
    secretName: azure-secret
    secretNamespace: default
    shareName: fabricrealtime
    readOnly: false
  claimRef:
    namespace: fabricrealtime
    name: az-files-rabbitmq
---
# Persistent Volume Claim
# claims have to be defined here otherwise when we remove the pods the volume goes into Released mode
# and we can't bind to that volume again until we delete the volume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: az-files-rabbitmq
  namespace: fabricrealtime  
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 128Gi
---
