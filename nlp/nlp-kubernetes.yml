# Fabric NLP stack
#
# --- Solr service ---
# Pod
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: fabric.nlp.solrserver
  namespace: fabricnlp    
  labels:
    app: solrserver
spec:
  replicas: 1
  revisionHistoryLimit: 3  # Clean-up old Replica Sets deployed; only keep previous 3.
  strategy:
    # We need to kill the existing Pod before creating an new one
    # for the new one to be able to attach the persistent disk.
    type: Recreate        
  selector:
    matchLabels:
      app: solrserver
  template:
    metadata:
      labels:
        app: solrserver
    spec:
      containers:
        - name: solrserver
          image: healthcatalyst/fabric.nlp.docker.solr:latest
          imagePullPolicy: Always          
          volumeMounts:
            - name: solr-persistent-storage
              mountPath: /var/lib/solr
              subPath: solr
          ports:
            - containerPort: 8085
              name: solr
      volumes:
      - name: solr-persistent-storage
        persistentVolumeClaim:
          claimName: az-files-solr            
---
# Service
kind: Service
apiVersion: v1
metadata:
# name of this service.  other
  name: solrserver
  namespace: fabricnlp  
  labels:
    app: solrserver
spec:
  ports:
  - port: 8085
    targetPort: 8085
    protocol: TCP
  selector:
    app: solrserver
---
# --- end of Solr service ---

# --- NLP service ---
# Pod
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: fabric.nlp.nlpwebserver
  namespace: fabricnlp    
  labels:
    app: nlpwebserver
spec:
  replicas: 1
  revisionHistoryLimit: 3  # Clean-up old Replica Sets deployed; only keep previous 3.
  strategy:
    # We need to kill the existing Pod before creating an new one
    # for the new one to be able to attach the persistent disk.
    type: Recreate        
  selector:
    matchLabels:
      app: nlpwebserver
  template:
    metadata:
      labels:
        app: nlpwebserver
    spec:
      containers:
        - name: nlpwebserver
          image: healthcatalyst/fabric.nlp.docker.web:latest
          imagePullPolicy: Always          
          env:
            - name: NLPWEB_EXTERNAL_URL
              value: nlp.ahmn.healthcatalyst.net
            - name: JOBSERVER_EXTERNAL_URL
              value: nlpjobs.ahmn.healthcatalyst.net
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysqlpassword
                  key: password
          ports:
            - containerPort: 8083
              name: nlpwebserver
            - containerPort: 8443
              name: https
---
# Service
kind: Service
apiVersion: v1
metadata:
# name of this service.  other
  name: nlpwebserver
  namespace: fabricnlp  
  labels:
    app: nlpwebserver
spec:
  ports:
  - port: 8083
    targetPort: 8083
    protocol: TCP
    name: http
  - port: 8443
    targetPort: 8443
    protocol: TCP
    name: https
  selector:
    app: nlpwebserver
---
# -- end of NLP Service ----

# --- NLP Jobs Service ---
# Pod
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: fabric.nlp.jobserver
  namespace: fabricnlp    
  labels:
    app: jobserver
spec:
  replicas: 1
  revisionHistoryLimit: 3  # Clean-up old Replica Sets deployed; only keep previous 3.
  strategy:
    # We need to kill the existing Pod before creating an new one
    # for the new one to be able to attach the persistent disk.
    type: Recreate        
  selector:
    matchLabels:
      app: jobserver
  template:
    metadata:
      labels:
        app: jobserver
    spec:
      containers:
        - name: jobserver
          image: healthcatalyst/fabric.nlp.docker.jobs:1
          imagePullPolicy: Always          
          env:
            - name: NLPWEB_EXTERNAL_URL
              value: nlp.ahmn.healthcatalyst.net
            - name: JOBSERVER_EXTERNAL_URL
              value: nlpjobs.ahmn.healthcatalyst.net
            # - name: EXTERNAL_HOSTNAME
            #   value: localhost
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysqlpassword
                  key: password
          ports:
            - containerPort: 8084
              name: jobserver
          volumeMounts:
            - name: jobs-persistent-storage
              mountPath: /opt/jobWork/
              subPath: jobs
      volumes:
      - name: jobs-persistent-storage
        persistentVolumeClaim:
          claimName: az-files-jobs            
---
# Service
kind: Service
apiVersion: v1
metadata:
# name of this service.  other
  name: jobserver
  namespace: fabricnlp  
  labels:
    app: jobserver
spec:
  ports:
  - port: 8084
    targetPort: 8084
    protocol: TCP
  selector:
    app: jobserver
---
# -- end of NLP Jobs Service

# --- MySql ---
# Pod
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
# name for this pod
  name: fabric.nlp.mysqlserver
# namespace for this pod
  namespace: fabricnlp  
  labels:
    app: mysqlserver
spec:
  replicas: 1
  revisionHistoryLimit: 3  # Clean-up old Replica Sets deployed; only keep previous 3.
  strategy:
    # We need to kill the existing Pod before creating an new one
    # for the new one to be able to attach the persistent disk.
    type: Recreate        
  selector:
    matchLabels:
      app: mysqlserver
  template:
    metadata:
      labels:
        app: mysqlserver
    spec:
      containers:
        # name of this pod
        - name: mysqlserver
          # image to pull
          image: healthcatalyst/fabric.nlp.docker.mysql:latest
          # specify to always pull a new image
          imagePullPolicy: Always
          # environment variables
          env:
            - name: MYSQL_ROOT_PASSWORD
              # set the value of this environment variable from a secret called mysqlrootpassword
              valueFrom:
                secretKeyRef:
                  name: mysqlrootpassword
                  key: password
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysqlpassword
                  key: password
            - name: MYSQL_DATABASE
              # set the value of this environment variable directly
              value: nlpmt
            - name: MYSQL_USER
              value: NLP_APP_USER
          ports:
            # expose port 3306
            - containerPort: 3306
              # name of the port
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              # point the /var/lib/mysql folder inside the container to the volume called mysql-persistent-storage
              mountPath: /var/lib/mysql
              subPath: mysql              
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: az-files-mysql            
---
# Service
kind: Service
apiVersion: v1
metadata:
# this service shows up in the UI with this name
  name: mysqlserver
# namespace should match other services in this file  
  namespace: fabricnlp  
# labels allows you to use selectors to find this service
  labels:
    app: mysqlserver
spec:
  ports:
# port that other services can use to connect to this service
  - port: 3306
# port in the pod we map to  
    targetPort: 3306
    protocol: TCP
# selector says this service should use a pod that has the "app: mysqlserver" label
  selector:
    app: mysqlserver
---
# -- end of MySql ---

# --- SMTP server ---
# Pod
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: fabric.nlp.smtpserver
  namespace: fabricnlp  
  labels:
    app: smtpserver
spec:
  replicas: 1
  revisionHistoryLimit: 3  # Clean-up old Replica Sets deployed; only keep previous 3.
  strategy:
    # We need to kill the existing Pod before creating an new one
    # for the new one to be able to attach the persistent disk.
    type: Recreate        
  selector:
    matchLabels:
      app: smtpserver
  template:
    metadata:
      labels:
        app: smtpserver
    spec:
      containers:
        - name: smtpserver
          image: healthcatalyst/fabric.smtp.agent:latest
          imagePullPolicy: Always       
          # environment variables
          env:
            - name: SMTP_RELAY_PASSWORD
              # set the value of this environment variable from a secret called smtprelaypassword
              valueFrom:
                secretKeyRef:
                  name: smtprelaypassword
                  key: password
            - name: SMTP_RELAY_USERNAME
              # set the value of this environment variable directly
              value: apikey
            - name: SMTP_RELAY_SERVER
              value: smtp.sendgrid.net
            - name: SMTP_RELAY_PORT
              value: "587"
          ports:
            - containerPort: 25
              name: smtp              
---
# Service
kind: Service
apiVersion: v1
metadata:
  name: smtpserver
  namespace: fabricnlp  
  labels:
    app: smtpserver
spec:
  ports:
  - port: 25
    targetPort: 25
    protocol: TCP
  selector:
    app: smtpserver
---
# -- end of SMTP ---

# Template to use for defining new services
# --- <Name of service> ---

# Pod

# Service

# -- end of <name of Service> ---